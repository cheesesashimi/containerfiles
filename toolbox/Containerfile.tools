ARG FEDORA_VERSION=39
FROM registry.fedoraproject.org/fedora-toolbox:${FEDORA_VERSION}

COPY get-arch.py /usr/local/bin/get-arch

ARG DYFF_VERSION=1.7.1
WORKDIR /dyff
RUN curl -L "https://github.com/homeport/dyff/releases/download/v${DYFF_VERSION}/dyff_${DYFF_VERSION}_linux_$(get-arch --amd64 --arm64).tar.gz" | tar xz

ARG OCP_VERSION=4.15.8
WORKDIR /oc
RUN curl -L "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OCP_VERSION}/openshift-client-linux$(get-arch --custom-x86_64="" --custom-aarch64='-arm64')".tar.gz | tar xz

ARG ZACKS_HELPERS_VERSION=0.0.15
WORKDIR /helpers
RUN curl -L "https://github.com/cheesesashimi/zacks-openshift-helpers/releases/download/v${ZACKS_HELPERS_VERSION}/zacks-openshift-helpers_Linux_$(get-arch --x86_64 --arm64).tar.gz" | tar xz && \
	rm README.md

ARG OMC_VERSION=3.6.0
WORKDIR /omc
RUN curl -L "https://github.com/gmeghnag/omc/releases/download/v${OMC_VERSION}/omc_Linux_$(get-arch --x86_64 --arm64).tar.gz" | tar zx

ARG K9S_VERSION=0.32.4
WORKDIR /k9s
RUN curl -L "https://github.com/derailed/k9s/releases/download/v${K9S_VERSION}/k9s_Linux_$(get-arch --amd64 --arm64).tar.gz" | tar xz

ARG YQ_VERSION=4.43.1
WORKDIR /yq
RUN curl -L "https://github.com/mikefarah/yq/releases/download/v${YQ_VERSION}/yq_linux_$(get-arch --amd64 --arm64).tar.gz" | tar xz && \
	mv "/yq/yq_linux_$(get-arch --amd64 --arm64)" /yq/yq

WORKDIR /rpms

ARG CHEZMOI_VERSION=2.47.3
RUN curl -Lo /rpms/chezmoi.rpm "https://github.com/twpayne/chezmoi/releases/download/v${CHEZMOI_VERSION}/chezmoi-${CHEZMOI_VERSION}-$(get-arch --x86_64 --aarch64).rpm"

ARG ANTIBODY_VERSION=6.1.1
RUN curl -Lo /rpms/antibody.rpm "https://github.com/getantibody/antibody/releases/download/v${ANTIBODY_VERSION}/antibody_${ANTIBODY_VERSION}_linux_$(get-arch --amd64 --arm64).rpm"

ARG DIVE_VERSION=0.12.0
RUN curl -Lo /rpms/dive.rpm "https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_$(get-arch --amd64 --arm64).rpm"

ARG GOLANGCI_LINT_VERSION=1.57.2
RUN curl -Lo /rpms/golangci-lint.rpm "https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_LINT_VERSION}/golangci-lint-${GOLANGCI_LINT_VERSION}-linux-$(get-arch --amd64 --arm64).rpm"

RUN --mount=type=cache,target=/var/cache/dnf,z \
	dnf copr enable -y atim/starship

ARG GIT_REVISION=dirty
ARG GIT_REPO=unknown
ARG CONTAINERFILE_SOURCE=unknown

LABEL org.opencontainers.image.url=$GIT_REPO
LABEL org.opencontainers.image.source=$CONTAINERFILE_SOURCE
LABEL org.opencontainers.image.revision=$GIT_REVISION
